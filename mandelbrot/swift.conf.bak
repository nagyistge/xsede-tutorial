sites: [blacklight-mpi, localhost]

# We have the mandelbrot generation app defined for all computational
# sites, and the assemble app defined only on localhost. This ensures
# that the compute heavy mandelbrot code runs on the compute resource
# and the IO heavy assemble operation is handled on the local machine.

site.localhost {
     execution {
        type    : "local"                            # Execution is local
        URL     : "localhost"                        # Point at localhost to run locally
     }
     staging             : direct                     # Files are on the same machine, so can be accessed "directly"
     workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Directory where work is done
     maxParallelTasks    : 101                         # Maximum number of parallel tasks
     initialParallelTasks: 100                         # Maximum number of tasks at start
     app.assemble {
        executable: ${env.PWD}"/bin/assemble"
     }
}


# Instructions for Blacklight
# 1. If you are running on the blacklight login nodes, set jobManager: "local:pbs"
site.blacklight-mpi {
    execution {
        type      : "coaster"                             # Use coasters to run on remote sites
        URL       : "blacklight.psc.xsede.org"        # Blacklight login URL
        jobManager: "local:pbs"                       # use ssh-cl to connect, pbs is the Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            maxJobTime      : "00:25:00"              # Time requested per job
            jobQueue        : "debug"
            workerLoggingLevel : "DEBUG"
            workerLoggingDirectory : ${env.PWD}"/workerlogs/"
            jobOptions {
                ppn         : "16"                    # Virtual processors per node per Job
            }
        }
    }
    staging             : "direct"                    # Stage files from "local" system to Blacklight
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "blacklight"
        env.MPI_APP_PATH: "/usr/users/8/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS   : "8"
    }
}

# Instructions for Blacklight
# 1. If you are running on the blacklight login nodes, set jobManager: "local:pbs"
site.blacklight-mpi-no-coaster {
    execution {
        type      : "pbs"                             # Use coasters to run on remote sites
        URL       : "blacklight.psc.xsede.org"        # Blacklight login URL
        jobManager: "local:pbs"                       # use ssh-cl to connect, pbs is the Local Resource manager(LRM)
    }
    filesystem {
        type: "local"
        URL: "localhost"
    }
    staging             : "swift"   
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "blacklight"
        env.MPI_APP_PATH: "/usr/users/8/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS   : "8"
        options{
	        jobQueue        : "debug"
            maxWallTime     : "00:25:00"              # Time requested per job
	        #count           : 2
            #ppn : 16
    	}
    }
}

site.stampede-mpi {
    execution {
        type      : "slurm"                         # Use coasters to run on remote sites
        URL       : "stampede.tacc.utexas.edu"      # Stampede login nodes login[1..4].stampede.tacc.utexas.edu
        jobManager: "local:slurm"                   # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                     # Max jobs submitted to LRM
            maxJobTime      : "00:25:00"            # Time requested per job
        }
    }
    filesystem {
        type: "local"
        URL: "localhost"
    }
    staging             : "swift"                   # Staging through shared-fs
    workDirectory       : ${env.HOME}"/swiftwork"   # Location for intermediate files
    maxParallelTasks    : 1                         # Maximum number of parallel tasks
    initialParallelTasks: 1                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "stampede"
        env.MPI_APP_PATH: "/home1/02551/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS   : "8"
	options{
	    jobQueue        : "development"
            maxWallTime     : "00:25:00"              # Time requested per job
	    #count           : 2
	}	
    }
}


site.stampede {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "stampede.tacc.utexas.edu"        # Stampede login nodes login[1..4].stampede.tacc.utexas.edu
        jobManager: "local:slurm"                     # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
	    #tasksPerNode    : 8                       # Tasks per Node
	    #jobOptions{
       	    #  	    "tasks"         : "8"
	    #}
            jobQueue        : "development"
            maxJobTime      : "00:25:00"              # Time requested per job
        }
    }
    staging             : "local"                     # Stage files from "local" system to Midway
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable: "/bin/bash"
        env.MACHINE: "stampede"
        env.MPI_APP_PATH: "/home1/02551/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS: "8"
    }
}

# Instructions for Swan
# 1.
site.swan {
    execution {
        type: "coaster"
        URL:  "swan.cray.com"
        jobManager: "ssh-cl:pbs"
        options {
            maxJobs: 10
            nodeGranularity: 1
            maxNodesPerJob: 1
            tasksPerNode: 8
        }
    }
    staging: local
    workDirectory: "/lus/scratch/p01953/swiftwork"
    maxParallelTasks: 101
    initialParallelTasks: 100
    app.bash {
        executable: "/bin/bash"
        env.MACHINE: "swan"
        env.MPI_APP_PATH: "/home/users/p01953/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS: "1"
    }
}

site.midway-westmere {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "swift.rcc.uchicago.edu"          # Midway login node | Alternatively use midway.rcc.uchicago.edu
        jobManager: "local:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 10                      # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 8                       # Tasks per Node
            jobQueue        : "westmere"                # Select queue from (sandyb, westmere, ...)
            maxJobTime      : "00:25:00"              # Time requested per job
        }
    }
    staging             : "direct"                    # Stage files from "local" system to Midway
    workDirectory       : "/tmp/"${env.USER} # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable: "/bin/bash"
        env.MACHINE: "midway"
        env.MPI_APP_PATH: "/scratch/midway/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS: "12"
    }
}

# Instructions for Midway:
# 1. If you are running on the midway login nodes set jobManager: "local:slurm"
# 2. Set workDirectory to /tmp/your_username_on_midway
site.midway-sandyb {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "swift.rcc.uchicago.edu"          # Midway login node | Alternatively use midway.rcc.uchicago.edu
        jobManager: "ssh-cl:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 10                      # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            jobQueue        : "sandyb"                # Select queue from (sandyb, westmere, ...)
            maxJobTime      : "00:25:00"              # Time requested per job
        }
    }
    staging             : "direct"                    # Stage files from "local" system to Midway
    workDirectory       : "/tmp/"${env.USER} # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable: "/bin/bash"
        env.MACHINE: "midway"
        env.MPI_APP_PATH: "/scratch/midway/yadunand/swift-tutorial/mandelbrot/bin/mandelbrot"
        env.MPI_RANKS: "12"
    }
}

TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: true                    # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
