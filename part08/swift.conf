sites: [blacklight, localhost]
#sites: [stampede, localhost]

# We have the mandelbrot generation app defined for all computational
# sites, and the assemble app defined only on localhost. This ensures
# that the compute heavy mandelbrot code runs on the compute resource
# and the IO heavy assemble operation is handled on the local machine.

# The local machine
# Run the IO heavy assemble operation locally to avoid the overhead
# of transferring several files, for a non-cpu bound job.
site.localhost {
     execution {
        type    : "local"                            # Execution is local
        URL     : "localhost"                        # Point at localhost to run locally
     }
     staging             : direct                     # Files are on the same machine, so can be accessed "directly"
     workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Directory where work is done
     maxParallelTasks    : 101                         # Maximum number of parallel tasks
     initialParallelTasks: 100                         # Maximum number of tasks at start
     app.assemble {
        executable: ${env.PWD}"/bin/assemble"
     }
}

# Site definition for stampede
# 1. Use reservation once reservation becomes active
site.stampede {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "stampede.tacc.xsede.org"         # Stampede login node
        jobManager: "ssh-cl:slurm"                    # Use ssh-cl to connect, slurm is the Local resource manager
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 2                       # request nodes in increments of 2
            maxNodesPerJob  : 2                       # request a maximum of 2 nodes/job
            jobQueue        : "development"           # queue to route jobs to
            maxJobTime      : "00:25:00"              # Time requested per job
	    jobOptions.slurm{
		"mode"        : "mpi"                 # Sets the execution mode to MPI
		#"reservation" : "mpierce_27"          # Reservation id for the run
	        "ranks"       : "32"                  # -N option on stampede
	    }
        }
    }
    staging             : "local"                     # Stage files from "local" system to Midway
    workDirectory       : ${env.STAMPEDE_HOME}"/swiftwork"           # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable: "/bin/bash"
        env.MACHINE: "stampede"
        env.MPI_APP_PATH: "/home1/02551/yadunand/mandelbrot" # Compiled binary on Stampede
        env.MPI_RANKS: "32"
    }
}


# Instructions for Blacklight
# 1. If you are running on the blacklight login nodes, set jobManager: "local:pbs"
site.blacklight {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "blacklight.psc.xsede.org"        # Blacklight login URL
        jobManager: "ssh-cl:pbs"                      # use ssh-cl to connect, pbs is the Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            maxJobTime      : "00:25:00"              # Time requested per job
            jobQueue        : "debug"
            workerLoggingLevel : "DEBUG"
            workerLoggingDirectory : "~/workerlogs/"
            jobOptions {
                ppn         : "16"                    # Virtual processors per node per Job
            }
        }
    }
    staging             : "local"                    # Stage files from "local" system to Blacklight
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "blacklight"
        env.MPI_APP_PATH: "/usr/users/9/train21/bin/mandelbrot"
        env.MPI_RANKS   : "16"
    }
}




TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: true                    # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
