sites: [mpibridges, localhost]

# We have the mandelbrot generation app defined for all computational
# sites, and the assemble app defined only on localhost. This ensures
# that the compute heavy mandelbrot code runs on the compute resource
# and the IO heavy assemble operation is handled on the local machine.

# The local machine
# Run the IO heavy assemble operation locally to avoid the overhead
# of transferring several files, for a non-cpu bound job.
site.localhost {
     execution {
        type    : "local"                            # Execution is local
        URL     : "localhost"                        # Point at localhost to run locally
     }
     staging             : direct                     # Files are on the same machine, so can be accessed "directly"
     workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Directory where work is done
     maxParallelTasks    : 101                         # Maximum number of parallel tasks
     initialParallelTasks: 100                         # Maximum number of tasks at start
     app.grep {
        executable: "*"
     }
}

site.bridges {
    execution {
        type      : "coaster"   
        jobManager: "local:slurm"
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            maxJobTime      : "00:25:00"              # Time requested per job
            jobQueue        : "RM"
            # workerLoggingLevel : "DEBUG"
            # workerLoggingDirectory : "~/workerlogs/"
            jobOptions {
                ppn   : "16"                    # Virtual processors per node per Job
            }
        }
    }
    staging             : "local"                    # Stage files from "local" system to Blacklight
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "bridges"
        env.MPI_APP_PATH: "/home/wilde/xsede-tutorial/part08/bin/mandelbrot"
        env.MPI_RANKS   : "28"
    }
}

site.mpibridges {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "bridges.psc.xsede.org"            # Comet login URL - not used for local:slurm
        jobManager: "local:slurm"                     # use slurm commands to submit jobs locally
        options {
	
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 7                       # Tasks per Node
            maxJobTime      : "00:30:00"              # Time requested per job
	    jobQueue        : "RM"                    # Submit to compute partition (from shared)
            jobOptions { jobType: "single"} 
        }
    }
    staging             : "local"                     # Stage files from "local" fs to compute nodes
#   workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Work dir on compute nodes
    workDirectory       : "/home/"${env.USER}"/swiftwork" # Work dir on compute nodes
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.mpirun { 
            executable: "*"                           # All apps to be found from commandline
    }
    app.mandelwrap { 
            executable: "*"                           # All apps to be found from commandline
    }
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "bridges"
        env.MPI_APP_PATH: "/home/wilde/xsede-tutorial/part08/bin/mandelbrot"
        env.MPI_RANKS   : "28"
    }
}

TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: true                    # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
