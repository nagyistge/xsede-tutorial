sites: [localhost]

# sites can be set to a comma separated list of remote sites you have access to
# eg.: sites: [stampede] or sites: [stampede, blacklight]
# The sites definition in the config can be overridden by specifying -sites on the
# swift command line as follows : swift -sites stampede p4.swift

# Default site for examples 1-3
# This site runs tasks on the local machine
site.localhost {
     execution {
        type    : "local"                            # Execution is local
        URL     : "localhost"                        # Point at localhost to run locally
     }
     staging             : direct                     # Files are on the same machine, so can be accessed "directly"
     workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Directory where work is done
     maxParallelTasks    : 101                         # Maximum number of parallel tasks
     initialParallelTasks: 100                         # Maximum number of tasks at start
     app.ALL { executable: "*" }                       # All tasks to be found from commandline
}


# Configuration for Bridges at the Pittsburgh Supercomputing Center
site.bridges {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "bridges.psc.xsede.org"           # Comet login URL - not used for local:slurm
        jobManager: "local:slurm"                     # use slurm commands to submit jobs locally
        options {
	
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 2                       # Nodes per job
            maxNodesPerJob  : 2                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            maxJobTime      : "00:30:00"              # Time requested per job
	    jobQueue        : "RM"               # Submit to compute partition (from shared)
            jobOptions { jobType: "single"} 
        }
    }
    staging             : "local"                     # Stage files from "local" fs to compute nodes
    workDirectory       : "/home/"${env.USER}"/swiftwork" # Work dir on compute nodes
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { 
            executable: "*"                           # All apps to be found from PATH
    }
}

# Configuration for MPI tasks on Bridges
site.mpibridges {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "bridges.psc.xsede.org"            # Comet login URL - not used for local:slurm
        jobManager: "local:slurm"                     # use slurm commands to submit jobs locally
        options {
	
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 7                       # Tasks per Node
            maxJobTime      : "00:30:00"              # Time requested per job
	    jobQueue        : "RM"                    # Submit to compute partition (from shared)
            jobOptions { jobType: "single"} 
        }
    }
    staging             : "local"                     # Stage files from "local" fs to compute nodes
    workDirectory       : "/home/"${env.USER}"/swiftwork" # Work dir on compute nodes
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.mpirun { 
            executable: "*"                           # All apps to be found from commandline
    }
    app.mandelwrap { 
            executable: "*"                           # All apps to be found from commandline
    }
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "bridges"
        env.MPI_APP_PATH: "/home/wilde/xsede-tutorial/part08/bin/mandelbrot"
        env.MPI_RANKS   : "28"
    }
}

# Configuration for Blue Waters at the NCSA
site.bluewaters {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "bw.ncsa.illinois.edu"            # BW login URL - not used for local:pbs
        jobManager: "local:pbs"                       # use PBS commands to submit jobs locally
        options {
	
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 2                       # Nodes per job
            maxNodesPerJob  : 2                       # Nodes per job
            tasksPerNode    : 1                       # Tasks per Node
            maxJobTime      : "00:30:00"              # Time requested per job
	    jobQueue        : "normal"                # Submit to "normal" queue
            jobOptions {
	        jobType: "single"
                ppn         : "16"                    # Virtual processors per node per Job
            }

        }
    }
    staging             : "direct"                    # Directly access files from the shared filesystem
    workDirectory       : "/u/training/"${env.USER}"/swiftwork" # Work dir on compute nodes
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { 
            executable: "*"                           # All apps to be found from PATH
    }
}

TCPPortRange: "50500,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: false                   # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)

